     1                                  section .text
     2                                      global fade_top
     3                                  
     4                                  fade_top:
     5 00000000 55                          push    ebp
     6 00000001 89E5                        mov     ebp, esp
     7                                      
     8 00000003 83EC08                      sub     esp,8  ;declaing local variable epb-4 for padding and ebp-8 for width*3
     9                                  
    10 00000006 53                          push    ebx
    11 00000007 56                          push    esi
    12 00000008 57                          push    edi
    13                                  
    14 00000009 8B7508                      mov     esi, [ebp + 8] ; Get the image pointer (img)
    15 0000000C 8B5D0C                      mov     ebx, [ebp + 12] ; Get the width (width)
    16 0000000F 8B4D10                      mov     ecx, [ebp + 16] ; Get the height (height)
    17 00000012 8B7D14                      mov     edi, [ebp + 20] ; Get the dist (dist)
    18                                  
    19                                      ; if no fade then do nothing
    20 00000015 85FF                        test    edi, edi 
    21 00000017 7459                        jz      fin
    22                                  
    23                                      ; multiplaying by 3 (the size of the color pixel)
    24 00000019 8D1C5B                      lea     ebx, [ebx*2 + ebx]
    25 0000001C 895DF8                      mov     [ebp-8], ebx
    26                                      
    27                                      ; calculating padding - (4 - width*3%4)%4
    28 0000001F BA04000000                  mov     edx, 4
    29 00000024 89D8                        mov     eax, ebx
    30 00000026 83E003                      and     eax, 3
    31 00000029 29C2                        sub     edx, eax
    32 0000002B 83E203                      and     edx, 3
    33                                      ; dl - padding
    34                                  
    35 0000002E 8955FC                      mov     [ebp-4], edx ; lading whole edx because later we add it to esi - need whole by
    36                                      
    37                                  
    38 00000031 01D3                        add     ebx, edx
    39                                      ; Calculate the start row for the fade effect into edx
    40 00000033 29F9                        sub     ecx, edi
    41                                      
    42                                  
    43                                      ; moving to a correct row for applying fade
    44 00000035 0FAFCB                      imul    ecx, ebx
    45 00000038 01CE                        add     esi, ecx
    46                                  
    47                                      ; chagning so that ebx have no padding
    48 0000003A 29D3                        sub     ebx, edx
    49                                  
    50                                      
    51                                      ;adding 1 beacause the fade for h-dist line is equal to 0
    52 0000003C 47                          inc     edi
    53                                  
    54                                      
    55 0000003D B901000000                  mov     ecx, 1  ; starting from the k row from top
    56                                      
    57                                  calculate_fade:
    58 00000042 31C0                        xor eax, eax
    59                                      ; Apply fade effect to the current pixel
    60                                      ;mov     al, 0xFF
    61                                      ;sub     al, [esi]
    62                                      ; al -> FF - [esi]
    63                                      ;imul    eax, ecx   ;
    64                                      ;xor     edx, edx
    65                                      ;div     edi            
    66                                      ;add     al, [esi]
    67 00000044 8A06                        mov al, [esi]
    68                                      ;imul eax, ecx ; n* original
    69                                      ;mov edx, edi
    70                                      ;sub edx, ecx    ; edx = dist - n
    71                                      ;sub eax, edx    ; n* original - (dist - n)
    72                                      ;shl edx, 8
    73                                      ;add eax, edx    ; n* original + (dist - n)(256 - 1)
    74 00000046 89FA                        mov edx, edi
    75 00000048 29CA                        sub edx, ecx    ; dist - n
    76 0000004A 0FAFC2                      imul eax, edx
    77                                  
    78                                  
    79 0000004D 89CA                        mov edx, ecx
    80 0000004F 29D0                        sub eax, edx
    81                                  
    82 00000051 C1E208                      shl edx, 8
    83 00000054 01D0                        add eax, edx
    84                                  
    85 00000056 31D2                        xor edx, edx 
    86 00000058 F7F7                        div edi
    87                                  
    88 0000005A 3DFF000000                  cmp eax, 0x000000FF
    89 0000005F 7200                        jb save
    90                                      ;mov al, 0xFF
    91                                      ;jnc     save
    92                                      ;mov     al, 0xFF
    93                                      ; (FF - al) * skala
    94                                      ; add to al
    95                                  save:
    96 00000061 8806                        mov     [esi], al
    97 00000063 46                          inc     esi
    98                                      ;pop     edx
    99 00000064 4B                          dec     ebx
   100 00000065 75DB                        jnz     calculate_fade
   101                                      ;loading and skipping the padding length
   102                                      ;mov     edx, [ebp-4] ; local variable for padding
   103 00000067 0375FC                      add     esi, [ebp-4]
   104                                  
   105 0000006A 41                          inc     ecx
   106 0000006B 8B5DF8                      mov     ebx, [ebp-8]
   107 0000006E 39F9                        cmp     ecx, edi
   108 00000070 75D0                        jne     calculate_fade
   109                                  
   110                                  fin:
   111 00000072 5F                          pop     edi
   112 00000073 5E                          pop     esi
   113 00000074 5B                          pop     ebx 
   114 00000075 89EC                        mov     esp, ebp  
   115 00000077 5D                          pop     ebp
   116 00000078 C3                          ret
